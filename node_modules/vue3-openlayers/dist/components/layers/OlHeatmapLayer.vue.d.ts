import { DefineComponent, ComputedRef, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ExtractPropTypes, PropType } from 'vue';
import HeatmapLayer from "ol/layer/Heatmap";
import type { Extent } from "ol/extent";
import { type LayersCommonProps } from '../../components/layers/LayersCommonProps';
type WeightFunction = () => number;
declare const _default: __VLS_WithTemplateSlots<DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<LayersCommonProps & {
    weight?: string | WeightFunction | undefined;
    extent?: Extent | undefined;
    blur?: number | undefined;
    radius?: number | undefined;
    gradient?: string[] | undefined;
}>, {
    weight: string;
    radius: number;
    blur: number;
    gradient: () => string[];
    className: string;
    opacity: number;
    visible: boolean;
    properties: () => {};
}>, {
    heatmapLayer: ComputedRef<HeatmapLayer>;
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<LayersCommonProps & {
    weight?: string | WeightFunction | undefined;
    extent?: Extent | undefined;
    blur?: number | undefined;
    radius?: number | undefined;
    gradient?: string[] | undefined;
}>, {
    weight: string;
    radius: number;
    blur: number;
    gradient: () => string[];
    className: string;
    opacity: number;
    visible: boolean;
    properties: () => {};
}>>>, {
    properties: () => Record<string, unknown>;
    radius: number;
    className: string;
    opacity: number;
    visible: boolean;
    weight: string | WeightFunction;
    blur: number;
    gradient: string[];
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
