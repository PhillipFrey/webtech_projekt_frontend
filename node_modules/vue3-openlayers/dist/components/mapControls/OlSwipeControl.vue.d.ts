import { default as __DTS_2__ } from 'ol/renderer/Layer';
import { default as __DTS_1__ } from 'ol/source/Source';
import { DefineComponent, ComputedRef, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ExtractPropTypes, PropType } from 'vue';
import Swipe from "ol-ext/control/Swipe";
import type { Layer } from "ol/layer";
declare const _default: DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    layerList?: Layer<__DTS_1__, __DTS_2__<any>>[] | undefined;
    className?: string | undefined;
    position?: number | undefined;
    orientation?: string | undefined;
}>, {
    className: string;
    position: number;
    orientation: string;
}>, {
    control: ComputedRef<Swipe>;
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    layerList?: Layer<__DTS_1__, __DTS_2__<any>>[] | undefined;
    className?: string | undefined;
    position?: number | undefined;
    orientation?: string | undefined;
}>, {
    className: string;
    position: number;
    orientation: string;
}>>>, {
    className: string;
    position: number;
    orientation: string;
}, {}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
