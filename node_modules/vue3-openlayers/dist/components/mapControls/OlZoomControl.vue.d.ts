import { DefineComponent, ComputedRef, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ExtractPropTypes, PropType } from 'vue';
import Zoom, { type Options } from "ol/control/Zoom";
declare const _default: DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<Options>, {
    duration: number;
    className: string;
    zoomInClassName: string;
    zoomOutClassName: string;
    zoomInLabel: string;
    zoomOutLabel: string;
    zoomInTipLabel: string;
    zoomOutTipLabel: string;
    delta: number;
}>, {
    control: ComputedRef<Zoom>;
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<Options>, {
    duration: number;
    className: string;
    zoomInClassName: string;
    zoomOutClassName: string;
    zoomInLabel: string;
    zoomOutLabel: string;
    zoomInTipLabel: string;
    zoomOutTipLabel: string;
    delta: number;
}>>>, {
    duration: number;
    className: string;
    zoomInClassName: string;
    zoomOutClassName: string;
    zoomInLabel: string | HTMLElement;
    zoomOutLabel: string | HTMLElement;
    zoomInTipLabel: string;
    zoomOutTipLabel: string;
    delta: number;
}, {}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
