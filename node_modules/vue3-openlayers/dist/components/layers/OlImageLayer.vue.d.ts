import { default as __DTS_7__ } from 'ol/events/Event';
import { Extent } from 'ol/extent';
import { default as __DTS_6__ } from 'ol/renderer/Layer';
import { default as __DTS_5__, State } from 'ol/source/Source';
import { BackgroundColor } from 'ol/layer/Base';
import { default as __DTS_3__ } from 'ol/renderer/canvas/ImageLayer';
import { default as __DTS_2__, ViewStateLayerStateExtent } from 'ol/View';
import { FeatureLike } from 'ol/Feature';
import { Pixel } from 'ol/pixel';
import { default as __DTS_1__ } from 'ol/source/Image';
import { FrameState } from 'ol/Map';
import { EventsKey, Listener } from 'ol/events';
import { LayerOnSignature, State, default as __DTS_4__ } from 'ol/layer/Layer';
import { DefineComponent, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ExtractPropTypes, PropType } from 'vue';
import type Map from "ol/Map";
import { type LayersCommonProps } from '../../components/layers/LayersCommonProps';
declare const _default: __VLS_WithTemplateSlots<DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<LayersCommonProps>, {
    className: string;
    opacity: number;
    visible: boolean;
    properties: () => {};
}>, {
    imageLayer: {
        on: LayerOnSignature<EventsKey>;
        once: LayerOnSignature<EventsKey>;
        un: LayerOnSignature<void>;
        render: (frameState: FrameState | null, target: HTMLElement) => HTMLElement | null;
        getSource: () => __DTS_1__ | null;
        getRenderSource: () => __DTS_1__ | null;
        getFeatures: (pixel: Pixel) => Promise<FeatureLike[]>;
        getData: (pixel: Pixel) => Uint8ClampedArray | Uint8Array | Float32Array | DataView | null;
        isVisible: (view?: __DTS_2__ | ViewStateLayerStateExtent | undefined) => boolean;
        getAttributions: (view?: __DTS_2__ | ViewStateLayerStateExtent | undefined) => string[];
        unrender: () => void;
        setMapInternal: (map: Map | null) => void;
        getMapInternal: () => Map | null;
        setMap: (map: Map | null) => void;
        setSource: (source: __DTS_1__ | null) => void;
        getRenderer: () => __DTS_3__ | null;
        hasRenderer: () => boolean;
        getBackground: () => false | BackgroundColor;
        getClassName: () => string;
        getLayerState: (managed?: boolean | undefined) => State;
        getLayersArray: (array?: __DTS_4__<__DTS_5__, __DTS_6__<any>>[] | undefined) => __DTS_4__<__DTS_5__, __DTS_6__<any>>[];
        getLayerStatesArray: (states?: State[] | undefined) => State[];
        getExtent: () => Extent | undefined;
        getMaxResolution: () => number;
        getMinResolution: () => number;
        getMinZoom: () => number;
        getMaxZoom: () => number;
        getOpacity: () => number;
        getSourceState: () => State;
        getVisible: () => boolean;
        getZIndex: () => number | undefined;
        setBackground: (background?: BackgroundColor | undefined) => void;
        setExtent: (extent: Extent | undefined) => void;
        setMaxResolution: (maxResolution: number) => void;
        setMinResolution: (minResolution: number) => void;
        setMaxZoom: (maxZoom: number) => void;
        setMinZoom: (minZoom: number) => void;
        setOpacity: (opacity: number) => void;
        setVisible: (visible: boolean) => void;
        setZIndex: (zindex: number) => void;
        get: (key: string) => any;
        getKeys: () => string[];
        getProperties: () => {
            [x: string]: any;
        };
        getPropertiesInternal: () => {
            [x: string]: any;
        } | null;
        hasProperties: () => boolean;
        notify: (key: string, oldValue: any) => void;
        addChangeListener: (key: string, listener: Listener) => void;
        removeChangeListener: (key: string, listener: Listener) => void;
        set: (key: string, value: any, silent?: boolean | undefined) => void;
        setProperties: (values: {
            [x: string]: any;
        }, silent?: boolean | undefined) => void;
        unset: (key: string, silent?: boolean | undefined) => void;
        changed: () => void;
        getRevision: () => number;
        addEventListener: (type: string, listener: Listener) => void;
        dispatchEvent: (event: string | __DTS_7__) => boolean | undefined;
        getListeners: (type: string) => Listener[] | undefined;
        hasListener: (type?: string | undefined) => boolean;
        removeEventListener: (type: string, listener: Listener) => void;
        dispose: () => void;
    };
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<LayersCommonProps>, {
    className: string;
    opacity: number;
    visible: boolean;
    properties: () => {};
}>>>, {
    properties: () => Record<string, unknown>;
    className: string;
    opacity: number;
    visible: boolean;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
