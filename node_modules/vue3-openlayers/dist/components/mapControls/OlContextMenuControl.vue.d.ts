import { DefineComponent, ComputedRef, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ExtractPropTypes, PropType } from 'vue';
import ContextMenu from "ol-contextmenu";
import type { Item } from "ol-contextmenu/dist/types";
declare const _default: DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    eventType?: "contextmenu" | "click" | "dblclick" | undefined;
    defaultItems?: boolean | undefined;
    width?: number | undefined;
    items?: Item[] | undefined;
}>, {
    eventType: string;
    defaultItems: boolean;
    width: number;
    items: () => never[];
}>, {
    control: ComputedRef<ContextMenu>;
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    eventType?: "contextmenu" | "click" | "dblclick" | undefined;
    defaultItems?: boolean | undefined;
    width?: number | undefined;
    items?: Item[] | undefined;
}>, {
    eventType: string;
    defaultItems: boolean;
    width: number;
    items: () => never[];
}>>>, {
    width: number;
    eventType: "click" | "dblclick" | "contextmenu";
    defaultItems: boolean;
    items: Item[];
}, {}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
